Pratique Maven
Ngor SECK - 18:57

Modules Maven : avec Spring Boot


•TD1:lab1(fait)
Créer un projet Maven nommé commandes : projet parent
Le projet parent est un projet Spring Boot
Créer les modules Maven suivants : services, web et start
-services sera un projet qui gère le métier de l'application
-web gère les contrôleurs
-start est le projet de démarrage



•TD1-2:lab2(fait)
Modules Maven avec les applications web

Créer un projet Maven nommé commandes : projet parent
Le projet parent est juste un projet Maven
Créer les modules Maven suivants : services, web et batch
-services sera un projet qui gère le métier de l'application
-web est un projet Tomcat
-batch est un projet Spring Boot



•TD1-3:lab3(fait)
Modules Maven avec gestion des plugins

Créer un projet Maven nommé commandes : projet parent
Le projet parent est juste un projet Maven
Créer les modules Maven suivants : services, web
-services sera un projet qui gère le métier de l'application
-web est une application Angular


•TD2 (fait)
la sécurité des applications : CAS

Créer une application web Maven.
Ajouter les dépendances Spring MVC.
Gérer l'ajout et la liste dans une base de données avec une classe :
AppUser (id long, name String).
Gérer la sécurité avec CAS.


•TD3(fait)
la sécurité des applications : Keycloak

Créer une application web Maven.
Ajouter les dépendances Spring MVC.
Gérer l'ajout et la liste dans une base de données avec une classe :
Product (ref String, name String).
Gérer la sécurité avec Keycloak.

-----
•demarer keycloak dans docker:
docker run -p 8080:8080 --name keycloak -e KEYCLOAK_ADMIN=admin -e KEYCLOAK_ADMIN_PASSWORD=admin quay.io/keycloak/keycloak:latest start-dev
• demarer java avec http://localhost:8180
-----




•TD4(fait)
Microservice 1:
1. Créer un projet web maven nommé stock-ms
2. Créer les packages entities, repository, service, mapper, dto, config (com.groupeisi.ecommerce)
3. Gerer les logs dans les controller et les services
4. Ajouter les TU pour les services avec mockito et JUnit jupiter
5. Mettez a jour le fichier de configuration hibernate dans application.yml
6. Ajouter l'entité Product(ref String, name String, stock double, long idUser) et son controller
7. Metter à jour le projet : dao, dto, mapper, service, controller gerant l'ajout et la liste des produits.
8. Ajouter les entités Purchases(id long, dateP Date, quantity  double, product Product, long idUser) et Sales(id long, dateP Date, quantity  double , product Product, long idUser)
9. Metter à jour le projet : dao, dto, mapper, service, controller en gerant l'ajout et la liste des achats et des ventes.





